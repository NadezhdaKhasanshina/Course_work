{"name": "TC-15: Оформление заказа после регистрации с доставкой на завтра", "status": "failed", "statusDetails": {"message": "AssertionError: Дата доставки не совпадает. Ожидалось: 23.08.2025, Фактически: 22.08.2025", "trace": "self = <tests.test_auth_flow.TestAuthFlow object at 0x0000023A1F1E6D70>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6bcdfd65b3e2f0f4329136f8b3da4fe6\")>\npreparing_cart = {'cart_page': <pages.cart_page.CartPage object at 0x0000023A1F334510>, 'first_pizza_name': 'Пицца «Как у бабушки»', 'second_pizza_name': 'Пицца «4 в 1»'}\n\n    @allure.title(\"TC-15: Оформление заказа после регистрации с доставкой на завтра\")\n    def test_complete_order_after_registration(self, browser, preparing_cart):\n        # Генерируем данные перед использованием\n        username, email, password = generate_random_credentials()\n        (preparing_cart['cart_page']\n         .open_cart())\n        menu_page = MenuPage(browser)\n        (menu_page.select_desserts_from_menu().add_first_dessert())\n        auth_page = AuthPage(browser)\n        (auth_page.go_to_auth_page().click_register_button()\n         .fill_registration_form(username, email, password)\n         .submit_registration())\n        time.sleep(1)\n        CartPage(browser).open_cart()\n        (auth_page.proceed_to_payment()\n         .fill_delivery_details(\n            first_name=\"Иван\",\n            last_name=\"Иванов\",\n            address=\"ул. Ленина, д. 10, кв. 5\",\n            city=\"Москва\",\n            region=\"Московская область\",\n            postcode=\"101000\",\n            phone=\"+79123456789\")\n    \n         .select_tomorrow_delivery()\n         .select_cash_on_delivery()\n         .accept_terms())\n        time.sleep(3)\n        (auth_page.place_order()\n>        .verify_order_confirmation(email=email))\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_auth_flow.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.auth_page.AuthPage object at 0x0000023A1F32C410>, email = 'qa_502@example.com', payment_method = 'Оплата при доставке'\n\n    @allure.step(\"Проверить подтверждение заказа\")\n    def verify_order_confirmation(\n            self, email, payment_method=\"Оплата при доставке\"):\n        # Проверяем заголовок/сообщение о успешном заказе\n        self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH,\n             \"//p[contains(@class, 'woocommerce-notice') and contains(., 'Ваш заказ был получен')]\")\n        ))\n    \n        # Проверяем email\n        email_element = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//li[contains(., 'Почта:')]/strong\")))\n        assert email.lower() in email_element.text.lower(\n        ), f\"Email не совпадает. Ожидалось: {email}, Фактически: {email_element.text}\"\n    \n        # Проверяем метод оплаты\n        payment_element = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//li[contains(., 'Метод оплаты:')]/strong\")))\n        assert payment_method in payment_element.text, f\"Метод оплаты не совпадает. Ожидалось: {payment_method}, Фактически: {\n            payment_element.text}\"\n    \n        # Проверяем дату (должна быть завтра)\n    \n        date_element = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//li[contains(., 'Дата:')]/strong\")))\n>       assert self.tomorrow_date in date_element.text, f\"Дата доставки не совпадает. Ожидалось: {\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            self.tomorrow_date}, Фактически: {\n            date_element.text}\"\nE       AssertionError: Дата доставки не совпадает. Ожидалось: 23.08.2025, Фактически: 22.08.2025\n\npages\\auth_page.py:151: AssertionError"}, "steps": [{"name": "Открыть корзину", "status": "passed", "start": 1755875418864, "stop": 1755875419452}, {"name": "Открыть меню и выбрать раздел 'Десерты'", "status": "passed", "start": 1755875419453, "stop": 1755875421753}, {"name": "Добавить первый десерт в корзину", "status": "passed", "start": 1755875421754, "stop": 1755875423025}, {"name": "Перейти в 'Мой аккаунт'", "status": "passed", "start": 1755875423025, "stop": 1755875423543}, {"name": "Перейти к регистрации", "status": "passed", "start": 1755875423544, "stop": 1755875424026}, {"name": "Заполнить форму регистрации", "status": "passed", "parameters": [{"name": "username", "value": "'qa_502'"}, {"name": "email", "value": "'qa_502@example.com'"}, {"name": "password", "value": "'Qwerty631'"}], "start": 1755875424026, "stop": 1755875424460}, {"name": "Нажать кнопку регистрации", "status": "passed", "start": 1755875424460, "stop": 1755875424586}, {"name": "Открыть корзину", "status": "passed", "start": 1755875425587, "stop": 1755875426128}, {"name": "Перейти к оплате", "status": "passed", "start": 1755875426129, "stop": 1755875426691}, {"name": "Заполнить данные доставки", "status": "passed", "parameters": [{"name": "first_name", "value": "'Иван'"}, {"name": "last_name", "value": "'Иванов'"}, {"name": "address", "value": "'ул. Ленина, д. 10, кв. 5'"}, {"name": "city", "value": "'Москва'"}, {"name": "region", "value": "'Московская область'"}, {"name": "postcode", "value": "'101000'"}, {"name": "phone", "value": "'+79123456789'"}], "start": 1755875426691, "stop": 1755875427732}, {"name": "Выбрать дату доставки - завтра", "status": "passed", "start": 1755875427732, "stop": 1755875427925}, {"name": "Выбрать оплату при доставке", "status": "passed", "start": 1755875427926, "stop": 1755875428285}, {"name": "Принять условия соглашения", "status": "passed", "start": 1755875428285, "stop": 1755875428648}, {"name": "Подтвердить заказ", "status": "passed", "start": 1755875431648, "stop": 1755875431848}, {"name": "Проверить подтверждение заказа", "status": "failed", "statusDetails": {"message": "AssertionError: Дата доставки не совпадает. Ожидалось: 23.08.2025, Фактически: 22.08.2025\n", "trace": "  File \"C:\\course_work\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\course_work\\pages\\auth_page.py\", line 151, in verify_order_confirmation\n    assert self.tomorrow_date in date_element.text, f\"Дата доставки не совпадает. Ожидалось: {\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "email", "value": "'qa_502@example.com'"}, {"name": "payment_method", "value": "'Оплата при доставке'"}], "start": 1755875431849, "stop": 1755875432917}], "start": 1755875418863, "stop": 1755875432920, "uuid": "4c5e9398-e1ee-4534-a27a-7885766d8ae9", "historyId": "49754da3289ea2476439c557cafb0497", "testCaseId": "49754da3289ea2476439c557cafb0497", "fullName": "tests.test_auth_flow.TestAuthFlow#test_complete_order_after_registration", "labels": [{"name": "story", "value": "Оформление заказа и регистрация"}, {"name": "feature", "value": "Основной флоу клиента"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_auth_flow"}, {"name": "subSuite", "value": "TestAuthFlow"}, {"name": "host", "value": "DESKTOP-CASI0Q3"}, {"name": "thread", "value": "10312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_auth_flow"}]}